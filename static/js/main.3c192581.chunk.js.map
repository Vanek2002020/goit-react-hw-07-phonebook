{"version":3,"sources":["components/Section/Section.module.css","components/Contacts/ContactsItem.module.css","components/Contacts/Contacts.module.css","store/slice.js","store/store.js","components/Section/Section.jsx","components/Form/Form.jsx","components/Filter/Filter.jsx","components/Contacts/ContactsItem.jsx","components/Contacts/Contacts.jsx","App.js","index.js","components/Form/Form.module.css"],"names":["module","exports","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","addContact","mutation","url","method","body","name","phone","invalidatesTags","deleteContact","contactId","useFetchContactsQuery","useAddContactMutation","useDeleteContactMutation","store","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","Section","text","className","children","s","Section__heading","Form","data","isLoading","findMap","find","contact","toLowerCase","handleSubmit","e","a","preventDefault","currentTarget","elements","value","number","alert","reset","console","log","message","onSubmit","htmlFor","Form__item","Form__input","id","type","pattern","title","required","disabled","Form__button","color","size","Filter","onChange","ContactsItem","item","isDeleting","ContactsItem__text","ContactsItem__button","onClick","Contacts","Contacts__list","length","Contacts__message","map","App","useState","filter","setFilter","isFetching","target","contacts","normalizedFilter","includes","getVisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c192581.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section__heading\":\"Section_Section__heading__19HOp\",\"Section\":\"Section_Section__28cFh\",\"Phonebook\":\"Section_Phonebook__1Xagq Section_Section__28cFh\",\"Contacts\":\"Section_Contacts__3V9NY Section_Section__28cFh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsItem\":\"ContactsItem_ContactsItem__11zEp\",\"ContactsItem__button\":\"ContactsItem_ContactsItem__button__pZz3i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contacts__list\":\"Contacts_Contacts__list__1VugH\",\"Contacts__message\":\"Contacts_Contacts__message__37URU\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactsApi = createApi({\n  reducerPath: 'contactsApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://61bdde042a1dd4001708a162.mockapi.io/api/v1/',\n  }),\n  tagTypes: ['Contacts'],\n  endpoints: builder => ({\n    fetchContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: ['Contacts'],\n    }),\n    addContact: builder.mutation({\n      query: ({ name, phone }) => ({\n        url: '/contacts',\n        method: 'POST',\n        body: { name, phone },\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contacts'],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useAddContactMutation,\n  useDeleteContactMutation,\n} = contactsApi;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { contactsApi } from './slice';\n\nexport const store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n  devTools: process.env.NODE_ENV === 'development',\n});\n","import React from 'react';\nimport s from 'components/Section/Section.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Section({ text, className, children }) {\n  return (\n    <section className={(s.Section, s[className])}>\n      <h2 className={s.Section__heading}>{text}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  text: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.any,\n};\n\nexport { Section };\n","import { Section } from 'components/Section/Section';\nimport s from 'components/Form/Form.module.css';\nimport PropTypes from 'prop-types';\nimport { useAddContactMutation, useFetchContactsQuery } from 'store/slice';\nimport ClipLoader from 'react-spinners/ClipLoader';\n\nfunction Form() {\n  const { data } = useFetchContactsQuery();\n\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const findMap = name => {\n    return data.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const name = e.currentTarget.elements.name.value;\n    const phone = e.currentTarget.elements.number.value;\n    if (findMap(name)) {\n      alert(`${name} is already in contacts!`);\n      return;\n    } else {\n      e.currentTarget.reset();\n      try {\n        await addContact({ name, phone });\n      } catch (error) {\n        console.log(error.message);\n      }\n    }\n  };\n\n  return (\n    <Section className=\"Phonebook\" text=\"Phonebook\">\n      <form onSubmit={handleSubmit} className={s.Form}>\n        <label htmlFor=\"input-name\" className={s.Form__item}>\n          Name\n        </label>\n        <input\n          className={s.Form__input}\n          id=\"input-name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label htmlFor=\"input-tel\" className={s.Form__item}>\n          Phone number\n        </label>\n        <input\n          className={s.Form__input}\n          id=\"input-tel\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n\n        <button type=\"submit\" disabled={isLoading} className={s.Form__button}>\n          Add contact{isLoading && <ClipLoader color=\"#000000\" size={12} />}\n        </button>\n      </form>\n    </Section>\n  );\n}\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n  className: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default Form;\n","import PropTypes from 'prop-types';\n\nfunction Filter({ onChange }) {\n  return (\n    <label htmlFor=\"search\">\n      Find contacts by name:\n      <input id=\"search\" type=\"text\" onChange={onChange} />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nexport default Filter;\n","import React from 'react';\nimport s from 'components/Contacts/ContactsItem.module.css';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'store/slice';\n\nfunction ContactsItem({ id, item }) {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const { name, phone } = item;\n  return (\n    <li key={id} id={id} className={s.ContactsItem}>\n      <span className={s.ContactsItem__text}>\n        {name}: {phone}\n      </span>\n      <button\n        className={s.ContactsItem__button}\n        onClick={() => deleteContact(id)}\n        disabled={isDeleting}\n      >\n        {isDeleting ? 'Deleting...' : 'Delete'}\n      </button>\n    </li>\n  );\n}\n\nContactsItem.propTypes = {\n  id: PropTypes.string,\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string,\n};\n\nexport { ContactsItem };\n","import { Section } from 'components/Section/Section';\nimport { ContactsItem } from './ContactsItem';\nimport s from 'components/Contacts/Contacts.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Contacts({ data }) {\n  return (\n    <Section className={s.Contacts} text=\"Contacts\">\n      {data && (\n        <ul className={s.Contacts__list}>\n          {data.length === 0 ? (\n            <h3 className={s.Contacts__message}>Nothing is here</h3>\n          ) : (\n            data.map(contact => (\n              <ContactsItem key={contact.id} id={contact.id} item={contact} />\n            ))\n          )}\n        </ul>\n      )}\n    </Section>\n  );\n}\n\nContacts.propTypes = {\n  name: PropTypes.string,\n  id: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default Contacts;\n","import './App.css';\nimport Form from 'components/Form/Form';\nimport Filter from 'components/Filter/Filter';\nimport Contacts from 'components/Contacts/Contacts';\nimport { useFetchContactsQuery } from 'store/slice';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { useState } from 'react';\n\nfunction App() {\n  const [filter, setFilter] = useState('');\n\n  const { data, isFetching } = useFetchContactsQuery();\n\n  const getVisibleContacts = contacts => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Form />\n      <Filter onChange={e => setFilter(e.target.value)} />\n      {isFetching ? (\n        <ClipLoader color=\"#000000\" size={150} />\n      ) : (\n        <Contacts data={getVisibleContacts(data)} />\n      )}\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { store } from 'store/store';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__3hlRl\",\"Form__item\":\"Form_Form__item__2qwN3\",\"Form__input\":\"Form_Form__input__3lTeE\"};"],"sourceRoot":""}